name: Build Android APK

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Build type'
        required: true
        default: 'debug'
        type: choice
        options:
        - debug
        - release

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
    
    - name: Cache pip dependencies
      uses: actions/cache@v3
      with:
        path: ~/.cache/pip
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-
    
    - name: Install system dependencies
      run: |
        sudo apt update
        sudo apt install -y git zip unzip openjdk-8-jdk autoconf libtool pkg-config zlib1g-dev libncurses5-dev libncursesw5-dev libtinfo5 cmake libffi-dev libssl-dev
        sudo apt install -y build-essential libssl-dev libffi-dev python3-dev
    
    - name: Set up Java 8
      uses: actions/setup-java@v3
      with:
        distribution: 'temurin'
        java-version: '8'
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install buildozer cython
        pip install -r requirements.txt
    
    - name: Cache Buildozer global directory
      uses: actions/cache@v3
      with:
        path: .buildozer_global
        key: buildozer-global-${{ hashFiles('buildozer.spec') }}
    
    - name: Cache Buildozer directory
      uses: actions/cache@v3
      with:
        path: .buildozer
        key: ${{ runner.os }}-${{ hashFiles('buildozer.spec') }}
    
    - name: Build with Buildozer
      run: |
        export BUILDOZER_GLOBAL_DIR="$(pwd)/.buildozer_global"
        if [ "${{ github.event.inputs.release_type }}" = "release" ]; then
          buildozer android release
        else
          buildozer android debug
        fi
    
    - name: Extract version from buildozer.spec
      id: version
      run: |
        VERSION=$(grep "^version" buildozer.spec | cut -d'=' -f2 | tr -d ' ')
        echo "version=$VERSION" >> $GITHUB_OUTPUT
        echo "Version: $VERSION"
    
    - name: Sign APK (if release)
      if: github.event.inputs.release_type == 'release'
      run: |
        if [ -n "${{ secrets.KEYSTORE_BASE64 }}" ]; then
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > keystore.jks
          jarsigner -verbose -sigalg SHA1withRSA -digestalg SHA1 -keystore keystore.jks -storepass "${{ secrets.KEYSTORE_PASSWORD }}" -keypass "${{ secrets.KEY_PASSWORD }}" bin/*.apk "${{ secrets.KEY_ALIAS }}"
          rm keystore.jks
        fi
    
    - name: Rename APK files
      run: |
        cd bin
        for file in *.apk; do
          if [[ $file == *"debug"* ]]; then
            mv "$file" "cek-kebugaran-harian-v${{ steps.version.outputs.version }}-debug.apk"
          elif [[ $file == *"release"* ]]; then
            mv "$file" "cek-kebugaran-harian-v${{ steps.version.outputs.version }}-release.apk"
          fi
        done
        ls -la
    
    - name: Upload APK artifacts
      uses: actions/upload-artifact@v3
      with:
        name: android-apk-v${{ steps.version.outputs.version }}
        path: bin/*.apk
        retention-days: 30
    
    - name: Create Release (if tag)
      if: startsWith(github.ref, 'refs/tags/')
      uses: softprops/action-gh-release@v1
      with:
        files: bin/*.apk
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    
    - name: Upload to Google Play (if release and secrets available)
      if: github.event.inputs.release_type == 'release' && secrets.GOOGLE_PLAY_SERVICE_ACCOUNT != ''
      uses: r0adkll/upload-google-play@v1
      with:
        serviceAccountJsonPlainText: ${{ secrets.GOOGLE_PLAY_SERVICE_ACCOUNT }}
        packageName: org.example.cekkebugaranharian
        releaseFiles: bin/*-release.apk
        track: internal
        status: draft